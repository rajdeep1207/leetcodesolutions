/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> list=new ArrayList();
        if(root==null) return list;
        Queue<TreeNode> q=new LinkedList<>();
       Stack<List<Integer>> stack=new Stack<>();
       q.offer(root);
        while(!q.isEmpty()){
            int size=q.size();
            List<Integer> inner=new ArrayList<>();
            while(size-- > 0){
                TreeNode temp=q.poll();
                inner.add(temp.val);
                if(temp.left!=null)
                  q.offer(temp.left);
                if(temp.right!=null)
                  q.offer(temp.right);
            }
           stack.push(inner);
        }
        while(!stack.isEmpty())
            list.add(stack.pop());
        return list;
    }
}
