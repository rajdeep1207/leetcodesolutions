class WordDictionary {
    
    class TrieNode{
        boolean isEnd;
        TrieNode[] child=new TrieNode[26];
    }
    
    TrieNode root;
    /** Initialize your data structure here. */
    public WordDictionary() {
        root=new TrieNode();
    }
    
    public void addWord(String word) {
        char[] ch=word.toCharArray();
        TrieNode tempnode=root;
        for(char c:ch){
            int index=c-'a';
            if(tempnode.child[index]==null)
                tempnode.child[index]=new TrieNode();
            tempnode=tempnode.child[index];
        }
        tempnode.isEnd=true;
    }
    
    public boolean search(String word) {
        return matches(word.toCharArray(),root,0);
    }
    
    public boolean matches(char[] word,TrieNode node,int index){
        if(node==null)
            return false;
        if(index==word.length)
            return node.isEnd;
        char ch=word[index];
        if(ch=='.'){
            for(int i=0;i<26;i++){
                if(node.child[i]!=null && matches(word,node.child[i],index+1)){
                    return true;
                }
            }
        }
        else {
            return node.child[ch-'a']!=null && matches(word,node.child[ch-'a'],index+1);
        }
        return false;
    }
}

/**
 * Your WordDictionary object will be instantiated and called as such:
 * WordDictionary obj = new WordDictionary();
 * obj.addWord(word);
 * boolean param_2 = obj.search(word);
 */
