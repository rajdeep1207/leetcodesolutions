class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        if(nums==null || nums.length==k)
            return nums;
        Map<Integer,Integer> map=new HashMap<>();
        for(int i:nums)
            map.put(i,map.getOrDefault(i,0)+1);
        PriorityQueue<Map.Entry<Integer,Integer>> pq=new PriorityQueue<>((a,b)->
            (a.getValue()==b.getValue()) ? a.getKey()-b.getKey():a.getValue()-b.getValue());
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            pq.add(entry);
            if(pq.size()>k)
                pq.remove();
        }
        int[] result=new int[k];
        int i=0;
        while(!pq.isEmpty()){
            result[i++]=pq.poll().getKey();
        }
        return result;
    }
}
