/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode addOneRow(TreeNode root, int v, int d) {
        if(root==null) return root;
        int level=1;
        if(d==1){
            TreeNode parent=new TreeNode(v);
            parent.left=root;
            return parent;
        }
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        while(level<d-1){
            int size=q.size();
            while(size-- > 0){
                TreeNode temp=q.poll();
                if(temp.left!=null){
                    q.offer(temp.left);
                }
                if(temp.right!=null){
                    q.offer(temp.right);
                }
            }
            level++;
        }
        while(!q.isEmpty()){
            TreeNode node=q.poll();
                TreeNode left=node.left;
                node.left=new TreeNode(v);
                node.left.left=left;
                TreeNode right=node.right;
                node.right=new TreeNode(v);
                node.right.right=right;
        }
        return root;
    }
}
